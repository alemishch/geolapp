"""Add photos table and remove sample_number

Revision ID: dce6c24b5a19
Revises: 4b57aedb670f
Create Date: 2024-10-31 20:51:25.826899

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dce6c24b5a19'
down_revision: Union[str, None] = '4b57aedb670f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sample_name', sa.String(), nullable=False),
    sa.Column('macro', sa.String(), nullable=True),
    sa.Column('straight_light', sa.String(), nullable=True),
    sa.Column('reflected_light', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['sample_name'], ['sample.sample_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint(None, 'sample', ['sample_name'])
    op.drop_column('sample', 'sample_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sample', sa.Column('sample_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'sample', type_='unique')
    op.drop_table('photos')
    # ### end Alembic commands ###
